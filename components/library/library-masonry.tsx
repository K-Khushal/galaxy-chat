"use client";

import { Dialog, DialogContent, DialogTrigger } from "@/components/ui/dialog";
import { CalendarIcon, MessageSquareIcon } from "lucide-react";
import Image from "next/image";

export interface MediaMessage {
  id: string;
  chatId: string;
  messageId: string;
  imageUrl: string;
  createdAt: Date;
  chatTitle?: string;
}

interface LibraryMasonryProps {
  mediaMessages: MediaMessage[];
}

export function LibraryMasonry({ mediaMessages }: LibraryMasonryProps) {
  // Create a masonry-like layout by varying image heights
  const getImageHeight = (index: number) => {
    const heights = [200, 250, 300, 180, 220, 280, 240, 260];
    return heights[index % heights.length];
  };

  const formatDate = (date: Date) => {
    return new Intl.DateTimeFormat("en-US", {
      month: "short",
      day: "numeric",
      year: "numeric",
    }).format(new Date(date));
  };

  return (
    <div className="p-4">
      <div className="mb-4">
        <p className="text-sm text-muted-foreground">
          {mediaMessages.length}{" "}
          {mediaMessages.length === 1 ? "image" : "images"} generated
        </p>
      </div>

      <div className="columns-1 sm:columns-2 md:columns-3 lg:columns-4 xl:columns-5 gap-4 space-y-4">
        {mediaMessages.map((media, index) => (
          <Dialog key={media.id}>
            <DialogTrigger asChild>
              <div
                className="group relative break-inside-avoid cursor-pointer rounded-lg overflow-hidden border bg-card hover:shadow-lg transition-all duration-200 hover:scale-[1.02]"
                style={{ height: getImageHeight(index) }}
              >
                <Image
                  src={media.imageUrl}
                  alt={`Generated image from ${media.chatTitle || "chat"}`}
                  fill
                  className="object-cover group-hover:scale-105 transition-transform duration-300"
                  unoptimized={media.imageUrl.startsWith("blob:")}
                />

                {/* Overlay */}
                <div className="absolute inset-0 bg-black/0 group-hover:bg-black/20 transition-colors duration-200" />

                {/* Info overlay */}
                <div className="absolute bottom-0 left-0 right-0 p-3 bg-gradient-to-t from-black/60 to-transparent opacity-0 group-hover:opacity-100 transition-opacity duration-200">
                  <div className="text-white text-sm">
                    {media.chatTitle && (
                      <p className="font-medium truncate mb-1">
                        {media.chatTitle}
                      </p>
                    )}
                    <div className="flex items-center gap-2 text-xs text-white/80">
                      <CalendarIcon className="w-3 h-3" />
                      {formatDate(media.createdAt)}
                    </div>
                  </div>
                </div>
              </div>
            </DialogTrigger>

            <DialogContent className="max-w-4xl max-h-[90vh] p-0">
              <div className="relative">
                <Image
                  src={media.imageUrl}
                  alt={`Generated image from ${media.chatTitle || "chat"}`}
                  width={800}
                  height={600}
                  className="w-full h-auto max-h-[80vh] object-contain rounded-lg"
                  unoptimized={media.imageUrl.startsWith("blob:")}
                />

                {/* Image info */}
                <div className="absolute bottom-0 left-0 right-0 p-4 bg-gradient-to-t from-black/80 to-transparent rounded-b-lg">
                  <div className="text-white">
                    {media.chatTitle && (
                      <h3 className="font-semibold mb-2">{media.chatTitle}</h3>
                    )}
                    <div className="flex items-center gap-4 text-sm text-white/80">
                      <div className="flex items-center gap-1">
                        <CalendarIcon className="w-4 h-4" />
                        {formatDate(media.createdAt)}
                      </div>
                      <div className="flex items-center gap-1">
                        <MessageSquareIcon className="w-4 h-4" />
                        Generated by assistant
                      </div>
                    </div>
                  </div>
                </div>
              </div>
            </DialogContent>
          </Dialog>
        ))}
      </div>
    </div>
  );
}
